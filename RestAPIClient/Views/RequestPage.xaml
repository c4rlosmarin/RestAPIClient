<Page
    x:Class="RestAPIClient.Views.RequestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RestAPIClient.Views"
    xmlns:helpers="using:RestAPIClient.Helpers"
    xmlns:viewmodels="using:RestAPIClient.ViewModels"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:controls2="using:CommunityToolkit.WinUI.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:RestAPIClient.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <helpers:StyleConverter x:Key="StyleConverter"/>
    </Page.Resources>

    <Grid RowDefinitions="Auto,Auto,*" Padding="15">

        <Grid.Resources>
            <ResourceDictionary>
                <SolidColorBrush x:Key="DataGridCellFocusVisualPrimaryBrush" Color="Transparent"/>
                <SolidColorBrush x:Key="DataGridCellFocusVisualSecondaryBrush" Color="Transparent"/>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid x:Name="mainGrid" Grid.Row="0" RowDefinitions="Auto,Auto,50,Auto,Auto">
            <Grid Grid.Row="0" ColumnDefinitions="*,Auto">
                <TextBlock Grid.Column="0" Text="{x:Bind ViewModel.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <!--<AppBarButton Name="btnSave" Grid.Column="1" Padding="0" Margin="0,-15,-10,0" Icon="Save" Label="Save" HorizontalAlignment="Right" Click="btnSave_Click">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="S"/>
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>-->

            </Grid>
            <Grid Grid.Row="1" ColumnDefinitions="Auto,*,Auto" Margin="0,20">
                <ComboBox x:Name="comboMethods" Grid.Column="0" Width="100" ItemsSource="{x:Bind ViewModel.Methods}" SelectedValuePath="Name" SelectedItem="{x:Bind ViewModel.SelectedMethod, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.IsMethodComboEnabled}" SelectionChanged="comboMethods_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:MethodsItemViewModel">
                            <TextBlock Text="{x:Bind Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox x:Name="txtUrl" Grid.Column="1" Margin="10,0" IsSpellCheckEnabled="False" PlaceholderText="Enter URL" Text="{x:Bind ViewModel.URL.RawURL, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GotFocus="txtUrl_GotFocus" LostFocus="txtUrl_LostFocus"/>
                <Button x:Name="btnSend" Grid.Column="2" Margin="0,0,-5,0" Content="Send" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.SendRequestCommand}" FontSize="13"/>
            </Grid>
            <Grid Grid.Row="2" ColumnDefinitions ="Auto,10, Auto">
                <Grid.Resources>
                    <DataTemplate x:Name="RequestParametersTabViewItemHeaderTemplate">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Parameters" Grid.Column="0" />
                            <TextBlock Text="{Binding}" Grid.Column="2" Style="{ThemeResource MyTextBlockAccentStyle}" />
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Name="RequestHeadersTabViewItemHeaderTemplate">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Headers" Grid.Column="0"/>
                            <TextBlock Text="{Binding}" Grid.Column="2" Style="{ThemeResource MyTextBlockAccentStyle}" />
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Name="RequestBodyItemTabViewItemHeaderTemplate">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Body" Grid.Column="0" />
                            <TextBlock Text="{Binding}" Grid.Column="2" Style="{ThemeResource MyTextBlockAccentStyle}" />
                        </Grid>
                    </DataTemplate>
                </Grid.Resources>

                <TabView x:Name="tabRequest" Grid.Column="0" SelectionChanged="tabRequest_SelectionChanged" IsAddTabButtonVisible="False" Width="310" HorizontalAlignment="Left" CanReorderTabs="False">
                    <TabViewItem Header="{x:Bind ViewModel.ParametersCount, Mode=TwoWay}" IsClosable="False" MinWidth="100" MaxWidth="100" HeaderTemplate="{StaticResource RequestParametersTabViewItemHeaderTemplate}" Loaded="TabViewItem_Loaded"/>
                    <TabViewItem Header="{x:Bind ViewModel.HeadersCount, Mode=TwoWay}" IsClosable="False" MinWidth="100" MaxWidth="100" HeaderTemplate="{StaticResource RequestHeadersTabViewItemHeaderTemplate}" Loaded="TabViewItem_Loaded"/>
                    <TabViewItem Header="{x:Bind ViewModel.BodyItemsCount, Mode=TwoWay}" IsClosable="False" MinWidth="100" MaxWidth="100" HeaderTemplate="{StaticResource RequestBodyItemTabViewItemHeaderTemplate}" Loaded="TabViewItem_Loaded"/>
                </TabView>

                <ComboBox x:Name="comboBodyType" ItemsSource="{x:Bind ViewModel.BodyTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{x:Bind ViewModel.SelectedBodyType, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.IsBodyComboEnabled}" Grid.Column="2" Width="100" Margin="0,8" Visibility="Collapsed" SelectionChanged="comboBodyType_SelectionChanged"/>
                
            </Grid>
            <controls:DataGrid Grid.Row="3" x:Name="dtgridParameters" ItemsSource="{x:Bind ViewModel.Parameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,15" AutoGenerateColumns="False" LoadingRow="dtgridRequest_LoadingRow" SizeChanged="dtgridRequest_SizeChanged" GotFocus="dtgridParameters_GotFocus" LostFocus="dtgridParameters_LostFocus" Height="275" MinHeight="28" MaxHeight="675" CanDrag="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" ClipboardCopyMode="ExcludeHeader">
                <controls:DataGrid.Resources>
                    <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor" Color="Transparent" />
                </controls:DataGrid.Resources>
                <controls:DataGrid.Columns>

                    <controls:DataGridTemplateColumn Header="" Width="30">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:ParameterItem">
                                <CheckBox IsChecked="{x:Bind IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{x:Bind IsEnabledActive}"  Margin="5,0,5,0" IsThreeState="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Parameter" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:ParameterItem">
                                <TextBox Text="{x:Bind Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{x:Bind IsKeyReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Value" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:ParameterItem">
                                <TextBox Text="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{x:Bind IsValueReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Description" Width="*">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:ParameterItem">
                                <TextBox Text="{x:Bind Description, Mode=TwoWay}" IsReadOnly="{x:Bind IsDescriptionReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn IsReadOnly="True" Width="50" Visibility="{x:Bind ViewModel.DeleteColumnVisibility}">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:ParameterItem">
                                <Button x:Name="btnDeleteParameter" HorizontalAlignment="Center" Visibility="{x:Bind DeleteButtonVisibility, Mode=OneWay}" Command="{x:Bind DeleteParameterItemCommand}" CommandParameter="{x:Bind}">
                                    <FontIcon Glyph="&#xe74d;" FontSize="12"/>
                                    <ToolTipService.ToolTip>
                                        <ToolTip>Delete</ToolTip>
                                    </ToolTipService.ToolTip>
                                </Button>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>
                </controls:DataGrid.Columns>
            </controls:DataGrid>

            <controls:DataGrid Grid.Row="3" x:Name="dtgridHeaders" ItemsSource="{x:Bind ViewModel.Headers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,15" AutoGenerateColumns="False" LoadingRow="dtgridRequest_LoadingRow" SizeChanged="dtgridRequest_SizeChanged" Height="275" MinHeight="28" MaxHeight="675" CanDrag="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" ClipboardCopyMode="ExcludeHeader" Visibility="Collapsed">
                <controls:DataGrid.Resources>
                    <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor" Color="Transparent" />
                </controls:DataGrid.Resources>
                <controls:DataGrid.Columns>

                    <controls:DataGridTemplateColumn Header="" Width="30">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <CheckBox IsChecked="{x:Bind IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{x:Bind isEnabledActive}"  Margin="5,0,5,0" IsThreeState="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Header" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <TextBox Text="{x:Bind Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{x:Bind IsKeyReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <!--<controls:DataGridTemplateColumn Header="Header with password" Width="*">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <Grid ColumnDefinitions="*,Auto">
                                    <PasswordBox Grid.Column="0" Password="{x:Bind Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PasswordRevealMode="Hidden"/>
                                    <CheckBox Grid.Column="1" Margin="10,0,0,0" Name="revealModeCheckBox" IsChecked="False"/>
                                </Grid>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>-->

                    <controls:DataGridTemplateColumn Header="Value" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <Grid ColumnDefinitions="*,Auto">
                                    <TextBox Grid.Column="0" Text="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{x:Bind IsValueReadyOnly}"  Visibility="{x:Bind DateTextboxVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                                    <DatePicker Name="datepickValue" Grid.Column="0" Visibility="{x:Bind DatePickerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" SelectedDateChanged="DatePicker_SelectedDateChanged"/>

                                    <Grid Grid.Column="1" ColumnDefinitions="5,Auto,5" Visibility="{x:Bind UTCVisibility, Mode=TwoWay}">
                                        <Button Grid.Column="1" x:Name="btnGetDatetimeInUTC" HorizontalAlignment="Right" Command="{x:Bind GetDateTimeInUTCCommand}" CommandParameter="{x:Bind}">
                                            <FontIcon Glyph="&#xec92;" FontSize="12"/>
                                            <ToolTipService.ToolTip>
                                                <ToolTip>Insert current datetime</ToolTip>
                                            </ToolTipService.ToolTip>
                                        </Button>
                                    </Grid>

                                    <Grid Grid.Column="1" ColumnDefinitions="5,Auto,5" Visibility="{x:Bind DatePickerButtonVisibility, Mode=TwoWay}">
                                        <Button Grid.Column="1" HorizontalAlignment="Right" Command="{x:Bind ShowDatePickerItemCommand}" CommandParameter="{x:Bind}">
                                            <FontIcon Glyph="&#xe787;" FontSize="12"/>
                                            <ToolTipService.ToolTip>
                                                <ToolTip>Select REST API version</ToolTip>
                                            </ToolTipService.ToolTip>
                                        </Button>

                                    </Grid>

                                    <Grid Grid.Column="1" ColumnDefinitions="5,Auto,5" Visibility="{x:Bind HideDatePickerButtonVisibility, Mode=TwoWay}">
                                        <Button Grid.Column="1" HorizontalAlignment="Right" Command="{x:Bind HideDatePickerItemCommand}" CommandParameter="{x:Bind}">
                                            <FontIcon Glyph="&#xe711;" FontSize="12"/>
                                            <ToolTipService.ToolTip>
                                                <ToolTip>Cancel</ToolTip>
                                            </ToolTipService.ToolTip>
                                        </Button>

                                    </Grid>
                                </Grid>

                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Description" Width="*">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <TextBox Text="{x:Bind Description, Mode=TwoWay}"  IsReadOnly="{x:Bind IsDescriptionReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn IsReadOnly="True" Width="50" Visibility="{x:Bind ViewModel.DeleteColumnVisibility}">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:HeaderItem">
                                <Button x:Name="btnDeleteParameter" HorizontalAlignment="Center" Visibility="{x:Bind DeleteButtonVisibility, Mode=OneWay}" Command="{x:Bind DeleteHeaderItemCommand}" CommandParameter="{x:Bind}">
                                    <FontIcon Glyph="&#xe74d;" FontSize="12"/>
                                    <ToolTipService.ToolTip>
                                        <ToolTip>Delete</ToolTip>
                                    </ToolTipService.ToolTip>
                                </Button>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>
                </controls:DataGrid.Columns>
            </controls:DataGrid>

            <controls:DataGrid Grid.Row="3" x:Name="dtgridBodyItems" ItemsSource="{x:Bind ViewModel.Body}" Margin="0,15" AutoGenerateColumns="False" LoadingRow="dtgridRequest_LoadingRow" SizeChanged="dtgridRequest_SizeChanged" Height="275" MinHeight="28" MaxHeight="675" CanDrag="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" ClipboardCopyMode="ExcludeHeader" Visibility="Collapsed">
                <controls:DataGrid.Resources>
                    <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor" Color="Transparent" />
                </controls:DataGrid.Resources>
                <controls:DataGrid.Columns>

                    <controls:DataGridTemplateColumn Header="" Width="30">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:BodyItem">
                                <CheckBox IsChecked="{x:Bind IsEnabled, Mode=TwoWay}" Margin="5,0,5,0" IsThreeState="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Key" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:BodyItem">
                                <TextBox Text="{x:Bind Key, Mode=TwoWay}" IsReadOnly="{x:Bind IsKeyReadyOnly}"  KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Value" Width="350">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:BodyItem">
                                <TextBox Text="{x:Bind Value, Mode=TwoWay}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn Header="Description" Width="*">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:BodyItem">
                                <TextBox Text="{x:Bind Description, Mode=TwoWay}" IsReadOnly="{x:Bind IsDescriptionReadyOnly}" KeyDown="TextBoxDatagridCell_KeyDown" IsSpellCheckEnabled="False"/>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>

                    <controls:DataGridTemplateColumn IsReadOnly="True" Width="50" Visibility="{x:Bind ViewModel.DeleteColumnVisibility}">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="viewmodels:BodyItem">
                                <Button x:Name="btnDeleteParameter" HorizontalAlignment="Center" Visibility="{x:Bind DeleteButtonVisibility, Mode=OneWay}" Command="{x:Bind DeleteBodyItemCommand}" CommandParameter="{x:Bind}">
                                    <FontIcon Glyph="&#xe74d;" FontSize="12"/>
                                    <ToolTipService.ToolTip>
                                        <ToolTip>Delete</ToolTip>
                                    </ToolTipService.ToolTip>
                                </Button>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>
                </controls:DataGrid.Columns>
            </controls:DataGrid>

            <RichEditBox x:Name="txtRawBody" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="275" MinWidth="28" MaxHeight="675" Margin="0,15" Visibility="Collapsed" IsSpellCheckEnabled="False" SizeChanged="dtgridRequest_SizeChanged" TextChanged="txtRawBody_TextChanged"/>

            <Grid x:Name="txtEmpty" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="275" MinWidth="28" MaxHeight="675" Margin="0,15" Visibility="Collapsed" SizeChanged="dtgridRequest_SizeChanged"/>
        </Grid>

        <controls2:ContentSizer x:Name="dtgridContentSizer" Grid.Row="1" TargetControl="{x:Bind dtgridParameters}" Orientation="Horizontal"/>

        <Grid Grid.Row="2" RowDefinitions="Auto,*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.Response.BannerVisibility, Mode=TwoWay}">
            <TextBlock Grid.Row="0" Text="Response" FontWeight="SemiBold"/>
            <Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Enter the request data and click send"/>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" RowDefinitions="Auto,15,*,60" HorizontalAlignment="Stretch" Visibility="{x:Bind ViewModel.Response.Visibility, Mode=TwoWay}">
            <Grid Grid.Row="0" ColumnDefinitions="Auto,*">
                <Grid.Resources>
                    <DataTemplate x:Name="ResponseHeadersTabViewItemHeaderTemplate" x:DataType="viewmodels:ResponseViewModel">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Headers" Grid.Column="0" />
                            <TextBlock Text="{x:Bind HeadersCount, Mode=TwoWay}" Grid.Column="2" Style="{ThemeResource MyTextBlockAccentStyle}" />
                        </Grid>
                    </DataTemplate>
                </Grid.Resources>

                <Grid Grid.Column="0" HorizontalAlignment="Left">

                    <TabView x:Name="tabResponse" Grid.Column="0"  SelectionChanged="tabResponse_SelectionChanged" IsAddTabButtonVisible="False" CanReorderTabs="False" Width="210">
                        <TabViewItem Header="Body" IsSelected="True" IsClosable="False" MinWidth="100" MaxWidth="100" Loaded="TabViewItem_Loaded"/>
                        <TabViewItem Header="{x:Bind ViewModel.Response, Mode=TwoWay}" IsClosable="False" MinWidth="100" MaxWidth="100" HeaderTemplate="{StaticResource ResponseHeadersTabViewItemHeaderTemplate}" Loaded="TabViewItem_Loaded"/>
                    </TabView>

                </Grid>

                <Grid Grid.Column="1" ColumnDefinitions="Auto,Auto,Auto" HorizontalAlignment="Right" ColumnSpacing="15" Margin="0,16">

                    <StackPanel Grid.Column="0" Orientation="Horizontal" Spacing="5">
                        <TextBlock Text="Status:" FontSize="12"/>
                        <TextBlock Text="{x:Bind ViewModel.Response.StatusCode, Mode=TwoWay}" Style="{x:Bind ViewModel.Response.StatusStyleKey, Mode=TwoWay, Converter = {StaticResource StyleConverter}}"/>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="5">
                        <TextBlock Text="Time:" FontSize="12"/>
                        <TextBlock Text="{x:Bind ViewModel.Response.Time, Mode=TwoWay}" Style="{ThemeResource MyTextBlockAccentStyle}"/>
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="5">
                        <TextBlock Text="Size:" FontSize="12"/>
                        <TextBlock Text="{x:Bind ViewModel.Response.Size, Mode=TwoWay}" Style="{ThemeResource MyTextBlockAccentStyle}"/>
                    </StackPanel>
                </Grid>
            </Grid>

            <Grid x:Name="gridResponseBody" Grid.Row="2">
                <ScrollViewer x:Name="scrollResponseBody" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" VerticalAlignment="Stretch">
                    <Border VerticalAlignment="Stretch">
                        <RichTextBlock x:Name="txtResponseBody" Grid.Row="1" VerticalAlignment="Stretch" SelectionChanged="txtResponseBody_SelectionChanged">
                            <Paragraph>
                                <Run Text="{x:Bind ViewModel.Response.Body, Mode=OneWay}"/>
                            </Paragraph>
                        </RichTextBlock>
                    </Border>
                </ScrollViewer>
            </Grid>

            <Grid x:Name="gridResponseHeaders" Grid.Row="2" Visibility="Collapsed" >
                <Border>
                    <controls:DataGrid x:Name="dtgridResponseHeaders" ItemsSource="{x:Bind ViewModel.Response.Headers, Mode=TwoWay}" LoadingRow="dtgridResponseHeaders_LoadingRow" MinHeight="38" AutoGenerateColumns="False" CanDrag="False" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False">
                        <controls:DataGrid.Resources>
                            <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundColor" Color="Transparent" />
                        </controls:DataGrid.Resources>
                        <controls:DataGrid.Columns>

                            <controls:DataGridTemplateColumn Header="Key" Width="*">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="viewmodels:ResponseHeaderItem">
                                        <TextBox Text="{x:Bind Key, Mode=TwoWay}" IsReadOnly="True" KeyDown="TextBoxDatagridCell_KeyDown"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>

                            <controls:DataGridTemplateColumn Header="Value" Width="*">
                                <controls:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate x:DataType="viewmodels:ResponseHeaderItem">
                                        <TextBox Text="{x:Bind Value, Mode=TwoWay}" IsReadOnly="True" KeyDown="TextBoxDatagridCell_KeyDown"/>
                                    </DataTemplate>
                                </controls:DataGridTemplateColumn.CellTemplate>
                            </controls:DataGridTemplateColumn>

                        </controls:DataGrid.Columns>
                    </controls:DataGrid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>
